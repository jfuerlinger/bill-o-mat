// <auto-generated />
using System;
using BillOMat.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BillOMat.Api.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240214120951_AddInvoices")]
    partial class AddInvoices
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BillOMat.Api.Entities.Institute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postalcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Institutes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine1 = "Linzerstraße 44",
                            City = "Marchtrenk",
                            Name = "Dr. Melanie Eichberger",
                            Postalcode = "4614"
                        });
                });

            modelBuilder.Entity("BillOMat.Api.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<int>("InstituteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SentToMerkur")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SentToOegk")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("PatientId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("BillOMat.Api.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "josef.fuerlinger@gmail.com",
                            FirstName = "Josef",
                            LastName = "Fürlinger",
                            Nickname = "Joe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "daniela.fuerlingerther@gmail.com",
                            FirstName = "Daniela",
                            LastName = "Fürlinger",
                            Nickname = "Dani"
                        },
                        new
                        {
                            Id = 3,
                            Email = "lea.fuerlinger@gmail.com",
                            FirstName = "Lea Marie",
                            LastName = "Fürlinger",
                            Nickname = "Lea"
                        },
                        new
                        {
                            Id = 4,
                            Email = "finja.fuerlinger@gmail.com",
                            FirstName = "Finja Sophie",
                            LastName = "Fürlinger",
                            Nickname = "Finja"
                        });
                });

            modelBuilder.Entity("BillOMat.Api.Entities.Invoice", b =>
                {
                    b.HasOne("BillOMat.Api.Entities.Institute", "Institute")
                        .WithMany("Invoices")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BillOMat.Api.Entities.Patient", "Patient")
                        .WithMany("Invoices")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institute");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("BillOMat.Api.Entities.Institute", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("BillOMat.Api.Entities.Patient", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
